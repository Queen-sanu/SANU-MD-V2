const { cmd } = require('../command');
const axios = require('axios');

cmd({
  pattern: "fb",
  alias: ["facebook", "fb3", "fbdl"],
  desc: "Download Facebook videos",
  category: "download",
  filename: __filename
}, async (conn, m, store, { from, q, reply }) => {
  try {
    if (!q || !q.startsWith("https://")) {
      return reply("*ùôøùôªùô¥ùô∞ùöÇùô¥ ùôøùöÅùôæùöÖùô∏ùô≥ùô¥ ùô∞ ùöÖùô∞ùôªùô∏ùô≥ ùôµùô∞ùô≤ùô±ùôæùôæùô∫ ùöÑùöÅùôª...üò§*");
    }

    await conn.sendMessage(from, { react: { text: 'üîÉ', key: m.key } });

    const apiUrl = `https://lance-frank-asta.onrender.com/api/downloader?url=${encodeURIComponent(q)}`;
    const { data } = await axios.get(apiUrl);

    if (!data?.content?.status || !data?.content?.data?.result?.length) {
      throw new Error("Invalid API response or no video found.");
    }

    let videoData = data.content.data.result.find(v => v.quality === "HD") || 
                    data.content.data.result.find(v => v.quality === "SD");

    if (!videoData) {
      throw new Error("No valid video URL found.");
    }

    await conn.sendMessage(from, {
      video: { url: videoData.url },
      caption: `*‚ôªÔ∏è ùöÄùöÑùô¥ùô¥ùôΩ ùöÇùô∞ùô≤ùô∑ùô∏ ùôºùô≥ ùôµùô± ùô≥ùôæùöÜùôΩùôªùôæùô∞ùô≥ùô¥ùöÅ üßö*\n\n*ùöÖùô∏ùô≥ùô¥ùôæ ùöÄùöÑùô∞ùôªùô∏ùöÉùöà :${videoData.quality}*\n\n> ¬© ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ã…™…¥…¢  Ä·¥Ä·¥†…™ üí•`
    }, { quoted: m });

  } catch (error) {
    console.error("FB Download Error:", error);

    // Send error details to bot owner
    const ownerNumber = conn.user.id.split(":")[0] + "@s.whatsapp.net";
    await conn.sendMessage(ownerNumber, {
      text: `‚ö†Ô∏è *FB Downloader Error!*\n\nüìç *Group/User:* ${from}\nüí¨ *Query:* ${q}\n‚ùå *Error:* ${error.message || error}`
    });

    // Notify the user
    reply("‚ùå *Error:* Unable to process the request. Please try again later.");
  }
});


cmd({
    pattern: "instagram",
    alias: ["igdl3", "reel3", "ig2", "instadl3"],
    desc: "Download Instagram reels or image posts",
    category: "downloader",
    react: "‚ôª",
    filename: __filename
},
async (conn, mek, m, { from, args, q, reply, react }) => {
    try {
        if (!q) return reply("*ùôøùôªùô¥ùô∞ùöÇùô¥ ùôøùöÅùôæùöÖùô∏ùô≥ùô¥ ùô∞ùôΩ ùô∏ùôΩùöÇùöÉùô∞ùô∂ùöÅùöÄùôº ùôøùôæùöÇùöÉ ùöäùöóùöç ùöÅùô¥ùô¥ùôª ùôªùô∏ùôΩùô∫...üò§*");
        if (!q.includes("instagram.com")) return reply("Invalid Instagram link.");

        const apiUrl = `https://delirius-apiofc.vercel.app/download/igv2?url=${q}`;
        const { data } = await axios.get(apiUrl);

        if (!data.status || !data.data) {
            await react("‚ùå"); 
            return reply("Failed to fetch Instagram media.");
        }

        const { username, fullname, caption, likes, comments, followed, download } = data.data;

        const captionText = `*‚ôªÔ∏è ùöÄùöÑùô¥ùô¥ùôΩ ùöÇùô∞ùô≤ùô∑ùô∏ ùôºùô≥ ùô∏ùôΩùöÇùöÉùô∞ùô∂ùöÅùô∞ùôº ùô≥ùôæùöÜùôΩùôªùôæùô∞ùô≥ùô¥ùöÅüßö*` +
                            `*üß© ùô∏ùôΩùöÇùöÉùô∞ùô∂ùöÅùô∞ùôº ùôøùôæùöÇùöÉ üèûÔ∏è*\n\n` +
                            `*üó£Ô∏è ùöÑùöÇùô¥ùöÅ :* ${fullname} (@${username})\n` +
                            `*üíó ùôªùô∏ùô∫ùô¥ùöÇ :* ${likes}\n*üìÉ ùô≤ùôæùôºùôºùô¥ùôΩùöÉùöÇ :* ${comments}\n*üë§ ùôµùôæùôªùôªùôæùöÜùöÅùöÇ :* ${followed}\n` +
                            `**üí¨ ùô≤ùô∞ùôøùöÉùô∏ùôæùôΩ :*\n${caption || "> ¬© ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ã…™…¥…¢  Ä·¥Ä·¥†…™ üí•"}`;

        for (const media of download) {
            if (media.type === "image") {
                await conn.sendMessage(from, {
                    image: { url: media.url },
                    caption: captionText,
                    contextInfo: { mentionedJid: [m.sender] }
                }, { quoted: mek });
            } else if (media.type === "video") {
                await conn.sendMessage(from, {
                    video: { url: media.url },
                    caption: captionText,
                    contextInfo: { mentionedJid: [m.sender] }
                }, { quoted: mek });
            }
        }

        await react("‚úÖ"); // React after successfully sending media
    } catch (e) {
        console.error("Error in Instagram downloader command:", e);
        await react("‚ùå");
        reply(`An error occurred: ${e.message}`);
    }
});

